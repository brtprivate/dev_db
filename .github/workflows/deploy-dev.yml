name: Deploy to Dev Server

on:
  push:
    branches: [ dev main master ]
  pull_request:
    types: [closed]
    branches: [ main master ]
  workflow_dispatch: # Allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          # Navigate to your project directory
          cd ${{ secrets.PROJECT_PATH }}
          
          # Fix Git permissions without sudo
          git config --global --add safe.directory ${{ secrets.PROJECT_PATH }}
           git config --global --add safe.directory /www/wwwroot/other/dev_db_mongoweb
          # Try to pull with error handling
          if git pull origin master 2>/dev/null; then
            echo "Git pull successful"
          else
            echo "Git pull had issues, trying alternative..."
            # Try alternative approach
            git fetch origin master 2>/dev/null || true
            git reset --hard origin/master 2>/dev/null || true
          fi
          
          # Optional: Install dependencies if package.json changed
          # Check if dependencies changed (safer approach)
          if [ -f "pnpm-lock.yaml" ] && [ -f "package.json" ]; then
            echo "Checking for dependency changes..."
            # Simple check: if lock file is newer than last install
            if [ ! -d "node_modules" ] || [ "pnpm-lock.yaml" -nt "node_modules" ]; then
              echo "Dependencies changed or missing, installing..."
              pnpm install
            else
              echo "Dependencies up to date"
            fi
          fi
          
          # Optional: Restart your application (uncomment if needed)
          # pm2 restart mongoweb || pnpm start
          
          echo "Deployment completed successfully!"
